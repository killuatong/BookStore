@model BookStore.Models.Author

@{
    var isCreateing = Model.Id == 0;
    ViewBag.Title = (isCreateing) ? "Create" : "Edit";
}

<div data-bind="visible: !saveCompleted()">

    <h2>@ViewBag.Title</h2>


    @using (Html.BeginForm("Edit", "Authors", FormMethod.Post, new { data_bind = "submit: validateAndSave" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Author</h4>
            <hr />
            @Html.ValidationSummary(true)

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    
                    @Html.TextBoxFor(model => model.FirstName, new {@class = "form-control", data_bind = "value: author.firstName"})
                    @Html.ValidationMessageFor(model => model.FirstName)
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", data_bind = "value:author.lastName" })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class ="aaa" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Biography, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Biography, new { @class = "form-control", data_bind = "value: author.biography" } )

                        @Html.ValidationMessageFor(model => model.Biography, "", new { @class = "text-danger" })
</div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10" data-bind="visible: !sending()">
                    <input type="submit" value="@if(isCreateing) {@Html.Raw("Create")} else { @Html.Raw("Update")}" class="btn btn-default" />
                </div>

                <div class="progress" data-bind="visible: sending">
                    <div class="progress-bar progress-bar-info progress-striped active"
                         role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"
                         style="width: 100%">
                        <span class="sr-only"></span>
                    </div>
                </div>
            </div>
        </div>
    }
    </div>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>



    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval", "/Scripts/ViewModels/AuthorFormViewModel.js")
        <script>
            var viewModel = new AuthorFormViewModel(@Html.HtmlConvertToJson(Model));
            ko.applyBindings(viewModel);
        </script>
    }
